---
- name: Initial bootstrap
  hosts: all

  vars:
    disktype: sd
    base_packages:
      - htop
      - aptitude
      - bind9-utils
      - dnsutils
      - apache2
      - libapache2-mod-php8.2
      - php8.2-cli
      - php8.2-curl
      - php8.2-gd
      - php8.2-json
      - php8.2-mbstring
      - php8.2-mysql
      - php8.2-xml
      - composer
      - prometheus
      - python3-pymysql
      - mariadb-client
      - rrdtool
      - npm
      - rabbitmq-server
  tasks:

    - name: Install packages
      apt:
        update_cache: yes
        name: "{{ base_packages }}"
      notify: Restart apache2
    

    - name: Enable the Apache2 modules
      community.general.apache2_module:
        state: present
        name: "{{ item }}"
      notify: Restart apache2
      loop:
        - headers
        - proxy
        - proxy_http
        - rewrite

    - name: Remove default vhost
      ansible.builtin.file:
        path: /etc/apache2/sites-enabled/000-default.conf
        state: absent
      notify: Restart apache2

    - name: Deploy Prod vhost
      ansible.builtin.copy:
        src: etc/apache2/sites-enabled/production.conf
        dest: /etc/apache2/sites-enabled/production.conf
        owner: root
        group: root
        mode: '0644'
      notify: Restart apache2

    - name: Deploy Dev vhost
      ansible.builtin.copy:
        src: etc/apache2/sites-enabled/dev.conf
        dest: /etc/apache2/sites-enabled/dev.conf
        owner: root
        group: root
        mode: '0644'
      notify: Restart apache2

    - name: "Cron: nightly cleanup"
      ansible.builtin.cron:
        name: Nightly cleanup
        minute: "0"
        hour: "0"
        user: www-data
        job: "cd /srv/production/maintenance; php ClearOldData.php 2>&1 > /tmp/dataclear.log; php OldRequestCleanup.php 2>&1 > /tmp/oldreq-cleanup.log; AutoFlagComments.php 2>&1 > /tmp/autoflag.log"
        cron_file: waca-production
  
    - name: "Cron: Job queue"
      ansible.builtin.cron:
        name: Job queue
        minute: "*"
        user: www-data
        job: "bash -l -c 'cd /srv/production/maintenance; php RunJobQueue.php > /tmp/jobqueue 2>&1'"
        cron_file: waca-production

    - name: "Cron: graph update"
      ansible.builtin.cron:
        name: Graph update
        minute: "*/5"
        user: www-data
        job: "/srv/dev/graph/update.sh > /tmp/graphupd.log 2>&1; /srv/dev/graph/graph.php > /tmp/graph.log 2>&1"
        cron_file: waca-aux

    - name: "Cron: Report link refresh"
      ansible.builtin.cron:
        name: Report link refresh
        hour: "11"
        minute: "0"
        user: www-data
        job: "cd /srv/dev/r; ./refresh.sh > /srv/dev/report/latesturls.txt"
        cron_file: waca-aux
    
    - name: Prometheus configuration
      ansible.builtin.copy:
        content: |
          # MANAGED BY ANSIBLE
          global:
            scrape_interval:     1m
            evaluation_interval: 1m
          rule_files:
          scrape_configs:
            - job_name: 'prometheus'
              metrics_path: '/prometheus/metrics'
              static_configs:
                - targets: ['localhost:9090']
            - job_name: acc
              scheme: https
              tls_config:
                insecure_skip_verify: true
              static_configs:
                - targets: ['accounts-dev.wmflabs.org']
              metrics_path: '/other/prometheus.php'
        dest: /etc/prometheus/prometheus.yml
      notify: Restart prometheus

    - name: Git directory configuration
      ansible.builtin.copy:
        content: |
          # MANAGED BY ANSIBLE
          [safe]
              directory = /srv/production
              directory = /srv/dev/rc
              directory = /srv/dev/demo
        dest: /etc/gitconfig

    - name: Ensure Prometheus path is set correctly
      ansible.builtin.lineinfile:
        path: /etc/default/prometheus
        regexp: '^ARGS="'
        line: 'ARGS="--web.external-url=http://localhost:9090/prometheus --storage.tsdb.retention.time=365d "'
      notify: Restart prometheus
  handlers:
    - name: Restart apache2
      service:
        name: apache2
        state: restarted

    - name: Restart prometheus
      service:
        name: prometheus
        state: restarted